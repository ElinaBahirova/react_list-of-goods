{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortBy","setState","reverse","reset","goods","visibleGoods","sort","good1","good2","ALPABET","localeCompare","LENGTH","length","getReorderedGoods","this","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,OAAS,SAACF,GACR,EAAKG,SAAS,CAAEH,cAPpB,EAUEI,QAAU,WACR,EAAKD,UAAS,SAACL,GAAD,MACZ,CAAEC,YAAaD,EAAMC,gBAZ3B,EAgBEM,MAAQ,WACN,EAAKF,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAnBzB,4CAuBE,WAAU,IAAD,OACDK,EArDH,SACLA,EADK,GAGJ,IADCN,EACF,EADEA,SAAUD,EACZ,EADYA,WAENQ,EAAe,YAAID,GAAOE,MAAK,SAACC,EAAOC,GAC3C,OAAQV,GACN,KAAKL,EAASgB,QACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKf,EAASkB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAIb,OAAIf,EACKQ,EAAaH,UAGfG,EAgCSQ,CAAkBnB,EAAiBoB,KAAKlB,OAEtD,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYH,KAAKlB,MAAME,WAAaL,EAASgB,UAEjDS,QAAS,WACP,EAAKlB,OAAOP,EAASgB,UARzB,iCAcA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYH,KAAKlB,MAAME,WAAaL,EAASkB,SAEjDO,QAAS,WACP,EAAKlB,OAAOP,EAASkB,SARzB,4BAcA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAaH,KAAKlB,MAAMC,aAE5BqB,QAASJ,KAAKZ,QAPhB,sBAYEY,KAAKlB,MAAMC,YAAciB,KAAKlB,MAAME,WAAaL,EAASM,OAExD,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKX,MAHhB,sBAUN,6BACE,6BACGC,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBApFvB,GAAyBC,IAAMC,WCvD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.35cc0e40.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods].sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 1;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortBy = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  reverse = () => {\n    this.setState((state) => (\n      { isReversed: !state.isReversed }\n    ));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': this.state.sortType !== SortType.ALPABET },\n            )}\n            onClick={() => {\n              this.sortBy(SortType.ALPABET);\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': this.state.sortType !== SortType.LENGTH },\n            )}\n            onClick={() => {\n              this.sortBy(SortType.LENGTH);\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !this.state.isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(this.state.isReversed || this.state.sortType !== SortType.NONE)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(good => (\n              <li key={good} data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}